Parsed Rust Compiler Output:

--- Message 1 ---
Level: error
Message: unresolved imports `rust_mcp_schema::Content`, `rust_mcp_schema::RpcErrorCode`
File: src-tauri\src\mcp\handler.rs
Location: Line 14, Column 79
Label: no `Content` in the root
Code Context:     CallToolRequest, CallToolResult, ListToolsRequest, ListToolsResult, Tool, Content, // Content should now be resolved
  help: a similar name exists in the module
    Suggestion: RpcError
Full Rendered Output:
error[E0432]: unresolved imports `rust_mcp_schema::Content`, `rust_mcp_schema::RpcErrorCode`
  --> src-tauri\src\mcp\handler.rs:14:79
   |
14 |     CallToolRequest, CallToolResult, ListToolsRequest, ListToolsResult, Tool, Content, // Content should now be resolved
   |                                                                               ^^^^^^^ no `Content` in the root
15 |     schema_utils::CallToolError, RpcError, RpcErrorCode, // RpcErrorCode should now be resolved
   |                                            ^^^^^^^^^^^^
   |                                            |
   |                                            no `RpcErrorCode` in the root
   |                                            help: a similar name exists in the module: `RpcError`




--- Message 2 ---
Level: error
Message: unresolved imports `tauri_plugin_fs::DirEntry`, `tauri_plugin_fs::DirOptions`, `tauri_plugin_fs::FileOptions`, `tauri_plugin_fs::Metadata`
File: src-tauri\src\mcp\tool_impl\filesystem.rs
Location: Line 10, Column 23
Label: no `DirEntry` in the root
Code Context: use tauri_plugin_fs::{DirEntry, FilePath, FsExt, DirOptions, FileOptions, Metadata as FsMetadata}; // MODIFIED: DirOperationOptions -> DirOptions, removed PathOptions
  help: consider importing one of these structs instead:
std::fs::DirEntry
tokio::fs::DirEntry
  help: consider importing one of these structs instead:
std::fs::Metadata
log::Metadata
tracing::Metadata
Full Rendered Output:
error[E0432]: unresolved imports `tauri_plugin_fs::DirEntry`, `tauri_plugin_fs::DirOptions`, `tauri_plugin_fs::FileOptions`, `tauri_plugin_fs::Metadata`
  --> src-tauri\src\mcp\tool_impl\filesystem.rs:10:23
   |
10 | use tauri_plugin_fs::{DirEntry, FilePath, FsExt, DirOptions, FileOptions, Metadata as FsMetadata}; // MODIFIED: DirOperationOptions ...
   |                       ^^^^^^^^                   ^^^^^^^^^^  ^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `Metadata` in the root
   |                       |                          |           |
   |                       |                          |           no `FileOptions` in the root
   |                       |                          no `DirOptions` in the root
   |                       no `DirEntry` in the root
   |
   = help: consider importing one of these structs instead:
           std::fs::DirEntry
           tokio::fs::DirEntry
   = help: consider importing one of these structs instead:
           std::fs::Metadata
           log::Metadata
           tracing::Metadata




--- Message 3 ---
Level: error
Message: unresolved import `tauri_plugin_fs::FileOptions`
File: src-tauri\src\mcp\tool_impl\edit.rs
Location: Line 10, Column 40
Label: no `FileOptions` in the root
Code Context: use tauri_plugin_fs::{FilePath, FsExt, FileOptions}; // Added FileOptions
Full Rendered Output:
error[E0432]: unresolved import `tauri_plugin_fs::FileOptions`
  --> src-tauri\src\mcp\tool_impl\edit.rs:10:40
   |
10 | use tauri_plugin_fs::{FilePath, FsExt, FileOptions}; // Added FileOptions
   |                                        ^^^^^^^^^^^ no `FileOptions` in the root




--- Message 4 ---
Level: warning
Message: unused import: `Error as ShellError`
File: src-tauri\src\mcp\tool_impl\terminal.rs
Location: Line 9, Column 98
Code Context: use tauri_plugin_shell::{process::CommandEvent, ShellExt, process::Command as TauriShellCommand, Error as ShellError}; // MODIFIED: ShellError -> Error as ShellError
  note: `#[warn(unused_imports)]` on by default
  help: remove the unused import
Full Rendered Output:
warning: unused import: `Error as ShellError`
 --> src-tauri\src\mcp\tool_impl\terminal.rs:9:98
  |
9 | use tauri_plugin_shell::{process::CommandEvent, ShellExt, process::Command as TauriShellCommand, Error as ShellError}; // MODIFIED: S...
  |                                                                                                  ^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default




--- Message 5 ---
Level: error
Message: no method named `read_text_file` found for reference `&tauri_plugin_fs::Fs<tauri_runtime_wry::Wry<EventLoopMessage>>` in the current scope
File: src-tauri\src\mcp\tool_impl\filesystem.rs
Location: Line 163, Column 49
Label: method not found in `&Fs<Wry<EventLoopMessage>>`
Code Context:         let full_content = deps.app_handle.fs().read_text_file(FilePath::Path(path))
Full Rendered Output:
error[E0599]: no method named `read_text_file` found for reference `&tauri_plugin_fs::Fs<tauri_runtime_wry::Wry<EventLoopMessage>>` in the current scope
   --> src-tauri\src\mcp\tool_impl\filesystem.rs:163:49
    |
163 |         let full_content = deps.app_handle.fs().read_text_file(FilePath::Path(path))
    |                                                 ^^^^^^^^^^^^^^ method not found in `&Fs<Wry<EventLoopMessage>>`




--- Message 6 ---
Level: error
Message: no method named `exists` found for reference `&tauri_plugin_fs::Fs<tauri_runtime_wry::Wry<EventLoopMessage>>` in the current scope
File: src-tauri\src\mcp\tool_impl\filesystem.rs
Location: Line 192, Column 92
Label: method not found in `&Fs<Wry<EventLoopMessage>>`
Code Context:     let final_content_str = if params.mode == WriteModeMCP::Append && deps.app_handle.fs().exists(FilePath::Path(path.clone())).unwrap_or(false) {
Full Rendered Output:
error[E0599]: no method named `exists` found for reference `&tauri_plugin_fs::Fs<tauri_runtime_wry::Wry<EventLoopMessage>>` in the current scope
   --> src-tauri\src\mcp\tool_impl\filesystem.rs:192:92
    |
192 | ...MCP::Append && deps.app_handle.fs().exists(FilePath::Path(path.clone())).unwrap_or(false) {
    |                                        ^^^^^^ method not found in `&Fs<Wry<EventLoopMessage>>`




--- Message 7 ---
Level: error
Message: no method named `read_text_file` found for reference `&tauri_plugin_fs::Fs<tauri_runtime_wry::Wry<EventLoopMessage>>` in the current scope
File: src-tauri\src\mcp\tool_impl\filesystem.rs
Location: Line 193, Column 57
Label: method not found in `&Fs<Wry<EventLoopMessage>>`
Code Context:         let existing_content_str = deps.app_handle.fs().read_text_file(FilePath::Path(path.clone())).unwrap_or_default();
Full Rendered Output:
error[E0599]: no method named `read_text_file` found for reference `&tauri_plugin_fs::Fs<tauri_runtime_wry::Wry<EventLoopMessage>>` in the current scope
   --> src-tauri\src\mcp\tool_impl\filesystem.rs:193:57
    |
193 |         let existing_content_str = deps.app_handle.fs().read_text_file(FilePath::Path(path.clone())).unwrap_or_default();
    |                                                         ^^^^^^^^^^^^^^ method not found in `&Fs<Wry<EventLoopMessage>>`




--- Message 8 ---
Level: error
Message: no method named `write_text_file` found for reference `&tauri_plugin_fs::Fs<tauri_runtime_wry::Wry<EventLoopMessage>>` in the current scope
File: src-tauri\src\mcp\tool_impl\filesystem.rs
Location: Line 205, Column 26
Label: method not found in `&Fs<Wry<EventLoopMessage>>`
Code Context:     deps.app_handle.fs().write_text_file(FilePath::Path(path.clone()), final_content_str, Some(fs_options))
Full Rendered Output:
error[E0599]: no method named `write_text_file` found for reference `&tauri_plugin_fs::Fs<tauri_runtime_wry::Wry<EventLoopMessage>>` in the current scope
   --> src-tauri\src\mcp\tool_impl\filesystem.rs:205:26
    |
205 |     deps.app_handle.fs().write_text_file(FilePath::Path(path.clone()), final_content_str, Some(fs_options))
    |                          ^^^^^^^^^^^^^^^ method not found in `&Fs<Wry<EventLoopMessage>>`




--- Message 9 ---
Level: error
Message: no method named `create_dir` found for reference `&tauri_plugin_fs::Fs<tauri_runtime_wry::Wry<EventLoopMessage>>` in the current scope
File: src-tauri\src\mcp\tool_impl\filesystem.rs
Location: Line 217, Column 26
Label: method not found in `&Fs<Wry<EventLoopMessage>>`
Code Context:     deps.app_handle.fs().create_dir(FilePath::Path(path), Some(DirOptions { recursive: Some(true), base_dir: None }))
Full Rendered Output:
error[E0599]: no method named `create_dir` found for reference `&tauri_plugin_fs::Fs<tauri_runtime_wry::Wry<EventLoopMessage>>` in the current scope
   --> src-tauri\src\mcp\tool_impl\filesystem.rs:217:26
    |
217 |     deps.app_handle.fs().create_dir(FilePath::Path(path), Some(DirOptions { recursive: Some(true), base_dir: None }))
    |                          ^^^^^^^^^^ method not found in `&Fs<Wry<EventLoopMessage>>`




--- Message 10 ---
Level: error
Message: no method named `read_dir` found for reference `&tauri_plugin_fs::Fs<tauri_runtime_wry::Wry<EventLoopMessage>>` in the current scope
File: src-tauri\src\mcp\tool_impl\filesystem.rs
Location: Line 228, Column 45
Code Context:     let entries_data = deps.app_handle.fs().read_dir(FilePath::Path(path), Some(DirOptions { recursive: Some(false), base_dir: None }))
  help: there is a method `read` with a similar name, but with different arguments
Full Rendered Output:
error[E0599]: no method named `read_dir` found for reference `&tauri_plugin_fs::Fs<tauri_runtime_wry::Wry<EventLoopMessage>>` in the current scope
   --> src-tauri\src\mcp\tool_impl\filesystem.rs:228:45
    |
228 |     let entries_data = deps.app_handle.fs().read_dir(FilePath::Path(path), Some(DirOptions { recursive: Some(false), base_dir: None...
    |                                             ^^^^^^^^
    |
help: there is a method `read` with a similar name, but with different arguments
   --> C:\Users\Steve Business\.cargo\git\checkouts\plugins-workspace-bac95421cc662c04\764e8f7\plugins\fs\src\lib.rs:331:5
    |
331 |     pub fn read<P: Into<FilePath>>(&self, path: P) -> std::io::Result<Vec<u8>> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^




--- Message 11 ---
Level: error
Message: no method named `rename` found for reference `&tauri_plugin_fs::Fs<tauri_runtime_wry::Wry<EventLoopMessage>>` in the current scope
File: src-tauri\src\mcp\tool_impl\filesystem.rs
Location: Line 242, Column 26
Code Context:     deps.app_handle.fs().rename(FilePath::Path(source_path), FilePath::Path(dest_path))
  help: there is a method `read` with a similar name, but with different arguments
Full Rendered Output:
error[E0599]: no method named `rename` found for reference `&tauri_plugin_fs::Fs<tauri_runtime_wry::Wry<EventLoopMessage>>` in the current scope
   --> src-tauri\src\mcp\tool_impl\filesystem.rs:242:26
    |
242 |     deps.app_handle.fs().rename(FilePath::Path(source_path), FilePath::Path(dest_path))
    |                          ^^^^^^
    |
help: there is a method `read` with a similar name, but with different arguments
   --> C:\Users\Steve Business\.cargo\git\checkouts\plugins-workspace-bac95421cc662c04\764e8f7\plugins\fs\src\lib.rs:331:5
    |
331 |     pub fn read<P: Into<FilePath>>(&self, path: P) -> std::io::Result<Vec<u8>> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^




--- Message 12 ---
Level: error
Message: no method named `metadata` found for reference `&tauri_plugin_fs::Fs<tauri_runtime_wry::Wry<EventLoopMessage>>` in the current scope
File: src-tauri\src\mcp\tool_impl\filesystem.rs
Location: Line 254, Column 56
Label: method not found in `&Fs<Wry<EventLoopMessage>>`
Code Context:     let fs_metadata: FsMetadata = deps.app_handle.fs().metadata(FilePath::Path(path.clone()))
Full Rendered Output:
error[E0599]: no method named `metadata` found for reference `&tauri_plugin_fs::Fs<tauri_runtime_wry::Wry<EventLoopMessage>>` in the current scope
   --> src-tauri\src\mcp\tool_impl\filesystem.rs:254:56
    |
254 |     let fs_metadata: FsMetadata = deps.app_handle.fs().metadata(FilePath::Path(path.clone()))
    |                                                        ^^^^^^^^ method not found in `&Fs<Wry<EventLoopMessage>>`




--- Message 13 ---
Level: error
Message: no method named `read_text_file` found for reference `&tauri_plugin_fs::Fs<tauri_runtime_wry::Wry<EventLoopMessage>>` in the current scope
File: src-tauri\src\mcp\tool_impl\filesystem.rs
Location: Line 310, Column 50
Label: method not found in `&Fs<Wry<EventLoopMessage>>`
Code Context:                             deps.app_handle.fs().read_text_file(FilePath::Path(val_path))
Full Rendered Output:
error[E0599]: no method named `read_text_file` found for reference `&tauri_plugin_fs::Fs<tauri_runtime_wry::Wry<EventLoopMessage>>` in the current scope
   --> src-tauri\src\mcp\tool_impl\filesystem.rs:310:50
    |
310 | ...                   deps.app_handle.fs().read_text_file(FilePath::Path(val_path))
    |                                            ^^^^^^^^^^^^^^ method not found in `&Fs<Wry<EventLoopMessage>>`




--- Message 14 ---
Level: error
Message: no method named `read_dir` found for reference `&tauri_plugin_fs::Fs<tauri_runtime_wry::Wry<EventLoopMessage>>` in the current scope
File: src-tauri\src\mcp\tool_impl\filesystem.rs
Location: Line 350, Column 46
Code Context:     let dir_entries_result = app_handle.fs().read_dir(FilePath::Path(dir_to_search.clone()), Some(DirOptions { recursive: Some(false), base_dir: None }));
  help: there is a method `read` with a similar name, but with different arguments
Full Rendered Output:
error[E0599]: no method named `read_dir` found for reference `&tauri_plugin_fs::Fs<tauri_runtime_wry::Wry<EventLoopMessage>>` in the current scope
   --> src-tauri\src\mcp\tool_impl\filesystem.rs:350:46
    |
350 |     let dir_entries_result = app_handle.fs().read_dir(FilePath::Path(dir_to_search.clone()), Some(DirOptions { recursive: Some(fals...
    |                                              ^^^^^^^^
    |
help: there is a method `read` with a similar name, but with different arguments
   --> C:\Users\Steve Business\.cargo\git\checkouts\plugins-workspace-bac95421cc662c04\764e8f7\plugins\fs\src\lib.rs:331:5
    |
331 |     pub fn read<P: Into<FilePath>>(&self, path: P) -> std::io::Result<Vec<u8>> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^




--- Message 15 ---
Level: error
Message: no method named `read_dir` found for reference `&tauri_plugin_fs::Fs<tauri_runtime_wry::Wry<EventLoopMessage>>` in the current scope
File: src-tauri\src\mcp\tool_impl\filesystem.rs
Location: Line 438, Column 53
Code Context:             let dir_entries = app_handle_clone.fs().read_dir(FilePath::Path(root_search_path), Some(DirOptions { recursive: Some(false), base_dir: None }))
  help: there is a method `read` with a similar name, but with different arguments
Full Rendered Output:
error[E0599]: no method named `read_dir` found for reference `&tauri_plugin_fs::Fs<tauri_runtime_wry::Wry<EventLoopMessage>>` in the current scope
   --> src-tauri\src\mcp\tool_impl\filesystem.rs:438:53
    |
438 | ...   let dir_entries = app_handle_clone.fs().read_dir(FilePath::Path(root_search_path), Some(DirOptions { recursive: Some(false), ...
    |                                               ^^^^^^^^
    |
help: there is a method `read` with a similar name, but with different arguments
   --> C:\Users\Steve Business\.cargo\git\checkouts\plugins-workspace-bac95421cc662c04\764e8f7\plugins\fs\src\lib.rs:331:5
    |
331 |     pub fn read<P: Into<FilePath>>(&self, path: P) -> std::io::Result<Vec<u8>> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^




--- Message 16 ---
Level: error
Message: mismatched types
File: src-tauri\src\mcp\tool_impl\terminal.rs
Location: Line 116, Column 21
Label: expected `CommandEvent`, found `Result<_, _>`
Code Context:             Ok(Some(Ok(event))) => { // Event received from stream
  note: expected enum `CommandEvent`
   found enum `std::result::Result<_, _>`
Full Rendered Output:
error[E0308]: mismatched types
   --> src-tauri\src\mcp\tool_impl\terminal.rs:116:21
    |
115 |         match timeout(Duration::from_millis(50), rx.recv()).await {
    |               --------------------------------------------------- this expression has type `std::result::Result<std::option::Option<CommandEvent>, Elapsed>`
116 |             Ok(Some(Ok(event))) => { // Event received from stream
    |                     ^^^^^^^^^ expected `CommandEvent`, found `Result<_, _>`
    |
    = note: expected enum `CommandEvent`
               found enum `std::result::Result<_, _>`




--- Message 17 ---
Level: error
Message: mismatched types
File: src-tauri\src\mcp\tool_impl\terminal.rs
Location: Line 125, Column 21
Label: expected `CommandEvent`, found `Result<_, _>`
Code Context:             Ok(Some(Err(shell_error))) => { // Error from stream
  note: expected enum `CommandEvent`
   found enum `std::result::Result<_, _>`
Full Rendered Output:
error[E0308]: mismatched types
   --> src-tauri\src\mcp\tool_impl\terminal.rs:125:21
    |
115 |         match timeout(Duration::from_millis(50), rx.recv()).await {
    |               --------------------------------------------------- this expression has type `std::result::Result<std::option::Option<CommandEvent>, Elapsed>`
...
125 |             Ok(Some(Err(shell_error))) => { // Error from stream
    |                     ^^^^^^^^^^^^^^^^ expected `CommandEvent`, found `Result<_, _>`
    |
    = note: expected enum `CommandEvent`
               found enum `std::result::Result<_, _>`




--- Message 18 ---
Level: error
Message: mismatched types
File: src-tauri\src\mcp\tool_impl\terminal.rs
Location: Line 147, Column 26
Label: expected `CommandEvent`, found `Result<_, _>`
Code Context:                     Some(Ok(event_from_channel)) => { // event_from_channel is CommandEvent
  note: expected enum `CommandEvent`
   found enum `std::result::Result<_, _>`
Full Rendered Output:
error[E0308]: mismatched types
   --> src-tauri\src\mcp\tool_impl\terminal.rs:147:26
    |
146 |                 match rx.recv().await {
    |                       --------------- this expression has type `std::option::Option<CommandEvent>`
147 |                     Some(Ok(event_from_channel)) => { // event_from_channel is CommandEvent
    |                          ^^^^^^^^^^^^^^^^^^^^^^ expected `CommandEvent`, found `Result<_, _>`
    |
    = note: expected enum `CommandEvent`
               found enum `std::result::Result<_, _>`




--- Message 19 ---
Level: error
Message: mismatched types
File: src-tauri\src\mcp\tool_impl\terminal.rs
Location: Line 172, Column 26
Label: expected `CommandEvent`, found `Result<_, _>`
Code Context:                     Some(Err(shell_error)) => { // ShellError from the stream in background task
  note: expected enum `CommandEvent`
   found enum `std::result::Result<_, _>`
Full Rendered Output:
error[E0308]: mismatched types
   --> src-tauri\src\mcp\tool_impl\terminal.rs:172:26
    |
146 |                 match rx.recv().await {
    |                       --------------- this expression has type `std::option::Option<CommandEvent>`
...
172 |                     Some(Err(shell_error)) => { // ShellError from the stream in background task
    |                          ^^^^^^^^^^^^^^^^ expected `CommandEvent`, found `Result<_, _>`
    |
    = note: expected enum `CommandEvent`
               found enum `std::result::Result<_, _>`




--- Message 20 ---
Level: error
Message: no method named `read_text_file` found for reference `&tauri_plugin_fs::Fs<tauri_runtime_wry::Wry<EventLoopMessage>>` in the current scope
File: src-tauri\src\mcp\tool_impl\edit.rs
Location: Line 56, Column 44
Label: method not found in `&Fs<Wry<EventLoopMessage>>`
Code Context:     let original_content = app_handle.fs().read_text_file(FilePath::Path(path.clone())) 
Full Rendered Output:
error[E0599]: no method named `read_text_file` found for reference `&tauri_plugin_fs::Fs<tauri_runtime_wry::Wry<EventLoopMessage>>` in the current scope
  --> src-tauri\src\mcp\tool_impl\edit.rs:56:44
   |
56 |     let original_content = app_handle.fs().read_text_file(FilePath::Path(path.clone())) 
   |                                            ^^^^^^^^^^^^^^ method not found in `&Fs<Wry<EventLoopMessage>>`




--- Message 21 ---
Level: error
Message: no method named `write_text_file` found for reference `&tauri_plugin_fs::Fs<tauri_runtime_wry::Wry<EventLoopMessage>>` in the current scope
File: src-tauri\src\mcp\tool_impl\edit.rs
Location: Line 71, Column 21
Label: method not found in `&Fs<Wry<EventLoopMessage>>`
Code Context:     app_handle.fs().write_text_file(FilePath::Path(path_obj.clone()), content, Some(FileOptions { append: Some(false), base_dir: None })) 
Full Rendered Output:
error[E0599]: no method named `write_text_file` found for reference `&tauri_plugin_fs::Fs<tauri_runtime_wry::Wry<EventLoopMessage>>` in the current scope
  --> src-tauri\src\mcp\tool_impl\edit.rs:71:21
   |
71 |     app_handle.fs().write_text_file(FilePath::Path(path_obj.clone()), content, Some(FileOptions { append: Some(false), base_dir: Non...
   |                     ^^^^^^^^^^^^^^^ method not found in `&Fs<Wry<EventLoopMessage>>`




--- Message 22 ---
Level: error
Message: no method named `with_level` found for struct `tauri_plugin_log::Target` in the current scope
File: src-tauri\src\lib.rs
Location: Line 53, Column 9
Code Context:         tauri_plugin_log::Target::new(tauri_plugin_log::TargetKind::LogDir {
Full Rendered Output:
error[E0599]: no method named `with_level` found for struct `tauri_plugin_log::Target` in the current scope
  --> src-tauri\src\lib.rs:55:12
   |
53 | /         tauri_plugin_log::Target::new(tauri_plugin_log::TargetKind::LogDir {
54 | |             file_name: Some("app_backend.log".into()),
55 | |         }).with_level(match level { // Set level for this specific target
   | |           -^^^^^^^^^^ method not found in `Target`
   | |___________|
   |




--- Message 23 ---
Level: error
Message: no method named `with_level` found for struct `tauri_plugin_log::Target` in the current scope
File: src-tauri\src\lib.rs
Location: Line 62, Column 9
Code Context:         tauri_plugin_log::Target::new(tauri_plugin_log::TargetKind::Webview)
Full Rendered Output:
error[E0599]: no method named `with_level` found for struct `tauri_plugin_log::Target` in the current scope
  --> src-tauri\src\lib.rs:63:14
   |
62 | /         tauri_plugin_log::Target::new(tauri_plugin_log::TargetKind::Webview)
63 | |             .with_level(log::LevelFilter::Info), // Example: Webview might have a different default
   | |             -^^^^^^^^^^ method not found in `Target`
   | |_____________|
   |